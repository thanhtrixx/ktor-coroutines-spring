import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
  id 'org.jetbrains.kotlin.jvm' version "$kotlin_version"
  id 'io.ktor.plugin' version "$ktor_version"
  id 'org.jetbrains.kotlin.plugin.serialization' version "$kotlin_version"
  id 'idea'
}

group "trile"
version "$project_version"
mainClassName = "trile.ApplicationKt"

def isDevelopment = project.ext.has("development")
applicationDefaultJvmArgs = ["-Dio.ktor.development=$isDevelopment"]

repositories {
  jcenter()
  mavenCentral()
}

dependencies {
  implementation "io.ktor:ktor-server-content-negotiation-jvm:$ktor_version"
  implementation "io.ktor:ktor-server-core-jvm:$ktor_version"
  implementation "io.ktor:ktor-serialization-kotlinx-json-jvm:$ktor_version"
  implementation "io.ktor:ktor-server-resources:$ktor_version"
  implementation "io.ktor:ktor-server-host-common-jvm:$ktor_version"
  implementation "io.ktor:ktor-server-status-pages-jvm:$ktor_version"
  implementation "io.ktor:ktor-server-netty-jvm:$ktor_version"

  implementation "ch.qos.logback:logback-classic:${logback_version}"

  implementation("org.springframework:spring-context:$spring_version")

  testImplementation "io.ktor:ktor-server-tests-jvm:$ktor_version"
  testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
}

tasks.withType(KotlinCompile).configureEach {
  kotlinOptions {
    freeCompilerArgs = ['-Xjsr305=strict']
    jvmTarget = jdk_version
  }
}

idea {
  module {
    downloadJavadoc = true
    downloadSources = true
  }
}
